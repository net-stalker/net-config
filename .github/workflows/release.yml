name: Build and upload binaries to release

on:
  push:
    tags: 'v*'
    branches: [ "develop" ]

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: monitor
            asset_name: monitor-linux-amd64
            run: sudo apt-get update && sudo apt-get install libpcap-dev libzmq3-dev && cargo install cargo-bundle
            bundle: deb
            bundle_artifact_name: monitor_1.0.0_amd64.deb
    #          - os: macos-latest
    #            artifact_name: monitor
    #            asset_name: monitor-macos-amd64
    #            run: brew install libpcap zeromq && cargo install cargo-bundle
    #            bundle: osx
    #            bundle_artifact_name: ExampleApplication.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Update platform
        run: ${{ matrix.run }}
      - name: Build project
        run: cargo build --release
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
      - name: Create bundle
        run: cargo bundle --release --format=${{ matrix.bundle }}
      - name: Upload bundle
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/bundle/${{ matrix.bundle }}/${{ matrix.bundle_artifact_name }}
          asset_name: ${{ matrix.bundle_artifact_name }}
      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'net-stalker/monitor'
          version: 'tags/v1.0'
          file: 'artifacts/deb-build/${{ matrix.bundle_artifact_name }}'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish PPA
        uses: yuezk/publish-ppa-package@main
        with:
          repository: 'ppa:dshcherbatiuk/netstalker'
          gpg_private_key: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.PPA_GPG_PASSPHRASE }}
          pkgdir: '${{ github.workspace }}/artifacts/deb-build/${{ matrix.bundle_artifact_name }}'